stages:
  - build
  - svarog-unit-tests
  - svarog-upgrade-pipeline
  - code_analysis
  - mvn_install


#before_script:


#after_script:
#  - git reset --hard HEAD
#  - git clean -df
#  - git stash
#  - git pull origin $CI_COMMIT_REF_NAME
01_svarog-build:
  stage: build
  script:
    - git reset --hard $CI_COMMIT_SHA
    - git clean -df
    - git stash
    - git pull origin $CI_COMMIT_SHA  
    - mvn clean compile
    - mvn exec:java@json


install-postgres-ut:
  stage: svarog-unit-tests
  script:
    - mvn clean compile
    - mvn exec:java@json
    - cd .gitlab-ci
    - ansible -m ping gitlab-ci-runner -i hosts/gitlabci.yml
    - ./ansible-svarog.sh ut $CI_PROJECT_DIR POSTGRES
    - cd $CI_PROJECT_DIR
    - mvn exec:java@install-drop -P PostgreSQL
    - mvn test -P PostgreSQL
    - mvn exec:java@upgrade-force -P PostgreSQL
    - mvn test -P PostgreSQL
    
install-oracle-ut:
  stage: svarog-unit-tests
  script:
    - mvn clean compile
    - mvn exec:java@json
    - cd .gitlab-ci
    - ansible -m ping gitlab-ci-runner -i hosts/gitlabci.yml
    - ./ansible-svarog.sh ut $CI_PROJECT_DIR ORACLE
    - cd $CI_PROJECT_DIR
    - mvn exec:java@install-drop-auto -P Oracle
    - mvn test -P Oracle
    - mvn exec:java@upgrade-force-auto -P Oracle
    - mvn test -P Oracle
    
upgrade-postgres-pipeline:
  stage: svarog-upgrade-pipeline
  script:
    - mvn clean compile
    - mvn exec:java@json
    - cd .gitlab-ci
    - ansible -m ping gitlab-ci-runner -i hosts/gitlabci.yml
    - ./ansible-svarog.sh $CI_COMMIT_REF_NAME $CI_PROJECT_DIR POSTGRES
    - cd $CI_PROJECT_DIR  
    - mvn exec:java@upgrade-force -P PostgreSQL
    - mvn test -P PostgreSQL
  environment:
    name: $CI_COMMIT_REF_NAME
  only:
    - master
    - staging
    - dev

    
upgrade-oracle-pipeline:
  stage: svarog-upgrade-pipeline
  script:
    - mvn clean compile
    - mvn exec:java@json
    - cd .gitlab-ci
    - ansible -m ping gitlab-ci-runner -i hosts/gitlabci.yml
    - ./ansible-svarog.sh $CI_COMMIT_REF_NAME $CI_PROJECT_DIR ORACLE
    - cd $CI_PROJECT_DIR  
    - mvn exec:java@upgrade-force -P Oracle
    - mvn test -P Oracle
    
    - cd $CI_PROJECT_DIR
    - cd target/surefire-reports
    - zip -r surefire-reports.zip *
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}_${CI_PIPELINE_ID}"
    when: always
    paths:
    - $CI_PROJECT_DIR/target/surefire-reports/surefire-reports.zip
    expire_in: 15 days
  environment:
    name: $CI_COMMIT_REF_NAME
  only:
    - master
    - staging
    - dev


svarog-sonarqube:
  stage: code_analysis
  script:
    - mvn sonar:sonar -Dsonar.analysis.mode=preview -Dsonar.projectName=$CI_PROJECT_NAME -Dsonar.gitlab.commit_sha=$CI_BUILD_REF -Dsonar.gitlab.ref_name=$CI_BUILD_REF_NAME -Dsonar.gitlab.project_id=$CI_PROJECT_ID

svarog-sonarqube_publish:
  stage: code_analysis
  script:
    - mvn sonar:sonar -Dsonar.analysis.mode=publish -Dsonar.projectName=$CI_PROJECT_NAME -Dsonar.gitlab.commit_sha=$CI_BUILD_REF -Dsonar.gitlab.ref_name=$CI_BUILD_REF_NAME -Dsonar.gitlab.project_id=$CI_PROJECT_ID -Donar.gitlab.user_token access=a18878c7b5beb401ce2f847537c296b46a3902b8 
  environment:
    name: $CI_COMMIT_REF_NAME
  only:
    - staging
    - dev  
  when: manual
  
svarog-install:
  stage: mvn_install
  script:  
    - pwd
    - mvn install -DskipTests
  only:
    - master
    - staging
    - dev    
